import json


def handle_npm_dependencies(file) -> dict:
    """
    recieves path to npm dependencies file and extract the dependencies from it
    :param file: path to dependencies file
    :type file: <class '_io.TextIOWrapper'>
    :return: dependencies
    :rtype: dict
    """
    try:
        npm_data = json.load(file)
    except:
        print(f"error while trying to load {file.name}, check the file format")
        exit(1)

    dependencies = {}
    if "dependencies" in npm_data.keys():
        for key, value in npm_data["dependencies"].items():
            if value[0].isnumeric(): # this way only dependencies with specific versions will be added and not dependencies with a version like ^6.0.1 or ~2.0.1
                dependencies[key] = value

    return dependencies


def handle_python_dependencies(file) -> dict:
    """
    recieves path to pip dependencies file and extract the dependencies from it
    :param file: path to dependencies file
    :type file: <class '_io.TextIOWrapper'>
    :return: dependencies
    :rtype: dict
    """
    dependencies = file.readlines()
    dependencies_as_dictionary = {}
   
    for dependency in dependencies:
        if '==' in dependency:   
            key, value = dependency.replace('\n', '').split("==")
            dependencies_as_dictionary[key] = value  # dont support different versions of the same package in the dependency file, npm and pip dont support it and also same key names in package.json isnt supported
    return dependencies_as_dictionary